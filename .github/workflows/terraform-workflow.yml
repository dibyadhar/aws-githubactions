name: Deploy Infrastructure

on:

  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:


jobs:

  terraform_plan:
    name: 'Terraform Plan'
    runs-on: ubuntu-latest

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout 
      uses: actions/checkout@v1

   # Install the preferred version of Terraform CLI 
    - name: Setup Terraform
      env:
        TERRAFORM_VERSION: "1.1.7"
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: $TERRAFORM_VERSION

    - name: Verify Terraform Version
      run: terraform --version

    # - name: List Files in Working Directory
    #   run: ls -lR
    
    - name: Terraform Init
      working-directory: ./terraform
      env:
       AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
       AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      
      run: terraform init -input=false

    - name: Terraform Validate
      working-directory: ./terraform
      run: terraform validate

    - name: Terraform Plan
      working-directory: ./terraform
      env:
       AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
       AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      
      run: terraform plan  -out "tf_plan" -input=false

    - name: Upload Terraform Plan
      uses: actions/upload-artifact@v2
      with:
          name: tf_plan
          path: ./terraform/tf_plan
          if-no-files-found: error
          retention-days: 1



  terraform_apply:
    name: 'Terraform Apply'
    runs-on: ubuntu-latest

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout 
      uses: actions/checkout@v1


   # Install the preferred version of Terraform CLI 
    - name: Setup Terraform
      env:
        TERRAFORM_VERSION: "1.1.7"
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: $TERRAFORM_VERSION

    - name: Verify Terraform Version
      run: terraform --version


    - name: Download Terraform Plan
      uses: actions/download-artifact@v2
      with:
        name: tf_plan
        path: ./terraform

    - name: Terraform Apply
      working-directory: ./terraform
      env:
       AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
       AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      
      run: |
        terraform show "tf_plan"
        terraform  apply  "tf_plan" -input=false